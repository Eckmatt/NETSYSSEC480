- name: centos config
  hosts: centos
  tasks:
    - name: create the .ssh directory if it is not there
      file:
        path: "/home/{{ ansible_user }}/.ssh"
        state: directory
        mode: 0700
    - name: create authorized_keys file
      file:
        path: "/home/{{ ansible_user }}/.ssh/authorized_keys"
        state: touch
        mode: 0644
    - name: copy over key block and append to authorized_keys
      blockinfile:
        dest: "/home/{{ ansible_user }}/.ssh/authorized_keys"
        block: "{{ public_key }}"
    
    - name: create sudoers dropin file for 480
      file:
        path: /etc/sudoers.d/480
        state: touch
        mode: 0440
      become: yes

    - name: create a drop in entry in /etc/sudoers.d/480
      blockinfile:
        dest: /etc/sudoers.d/480
        block: "{{ ansible_user }}  ALL=(ALL) NOPASSWD: ALL"
      become: yes
    
    - name: set the hostname
      hostname:
        name: "{{ hostname }}"
      become: yes

    - name: add host to hosts file
      lineinfile:
        path: /etc/hosts
        line: '127.0.1.1 {{ hostname }}'
      become: yes

    - name: push over the networking script
      template:
        src: /home/sora/NETSYSSEC480/480-utils/ansible/ifcfg.j2
        dest: '/etc/sysconfig/network-scripts/ifcfg-{{device}}'
        mode: 0644
        owner: root
        group: root
        force: yes
      become: yes

    - name: push over nginx repo
      template:
        src: nginx.j2
        dest: '/etc/yum.repos.d/nginx.repo'
        mode: 0644
        owner: root
        group: root
        force: yes
      become: yes

    - name: Update Yum
      shell: "sudo yum update -y"
      become: yes
      async: 1
      poll: 0

    - name: Install nginx
      yum:
        name: nginx
        state: latest
      become_user: root
    
    - name: Push modified nginx.conf
      template:
        src: milestone9.j2
        dest: '/etc/nginx/eckhardt.conf'
        mode: 0644
        owner: root
        group: root
        force: yes
      become: yes

    - name: restart nginx
      shell: "sudo systemctl restart nginx && systemctl restart network"
      become: yes
      async: 1
      poll: 0
